#include<iostream>
#include<stdlib.h>

using namespace std;

#define KeyType int
#define DataType char

typedef struct
{
	KeyType key;//关键字域
}ElemType;

typedef struct
{
	ElemType* r;//表基址
	int length;//表长
}SSTable;// Sequential Search Table

//在顺序表中存放数据
void putdataST(SSTable& ST)
{
	KeyType k;
	cout << "请输入要存放的数据，-1结束" << endl;
	cin >> k ;
	int i = 1;
	ST.r = (ElemType*)malloc(sizeof(ElemType));
	ST.length = 0;
	while (k != -1)
	{
		ST.length++;
		ST.r = (ElemType*)realloc(ST.r, sizeof(ElemType) * ST.length+1);
			(ST.r + i)->key = k;
			i++;
			cin >> k;
	}
}

//在顺序表中查找数据
int Search_Seq(SSTable ST, KeyType key)
{
	for (int i = ST.length; i >0; i--)
		if (ST.r[i].key == key)
			return i;
	return 0;
}
int Search_Seq1(SSTable ST, KeyType key)
{
	int i;
	for ( i = ST.length; ST.r[i].key != key&&i>0; i--);
		return i;
		
}
//加入哨兵，即数组第0位存放key 减少了判断i是否越界
//数据过大后平均时间可以减少一半
int Search_Seq2(SSTable ST, KeyType key)
{
	ST.r[0].key = key;
	int i;
	for (i = ST.length; ST.r[i].key != key; i--);
	return i;

}
int main()
{
	SSTable ST;//定义顺序表
	putdataST(ST);
	cout<<Search_Seq2(ST, 1);
	system("pause");
	return 0;
}
